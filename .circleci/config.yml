defaults: &defaults
  working_directory: ~/repo
version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.1-node 
    <<: *defaults
    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler, gem, ruby?
          command: |
            bundle -v
            gem -v
            ruby -v
      - run:
          name: update rubygems
          command: |
            gem update --system
      - run:
          name: update bundler
          command: | 
            bundle update --bundler
      - run:
          name: Which bundler?
          command: |
            bundle -v
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Jekyll build
          command: bundle exec jekyll build
      - run:
          name: HTMLProofer tests
          command: |
            bundle exec htmlproofer ./_site \
              --allow-hash-href \
              --check-favicon  \
              --check-html \
              --disable-external
      - persist_to_workspace:
          root: ./
          paths:
            - _site
  deploy:
    <<: *defaults
    docker:
      - image: circleci/python:3.6.3
    environment:
      S3_BUCKET_NAME: <<YOUR BUCKET NAME HERE>>
    steps:
      - attach_workspace:
          at: ./_site
      - run:
          name: Generate data hub api js and mapbox public key js
          command: | 
            echo "data_hub_api_endpoint='$data_end_point'" > data_hub_api_endpoint.js
            echo "mapbox_public_key='$mapbox_public_key'" > mapbox_public_key.js

      
      - attach_workspace:
          at: ./      
      - run:
          name: Install AWS CLI
          command: pip install awscli --upgrade --user
      - run:
          name: Upload to s3
          command: ~/.local/bin/aws s3 sync ./_site s3://$S3_BUCKET_NAME/ --delete --acl public-read
workflows:
  version: 2
  test-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master